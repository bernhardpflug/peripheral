/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StartUpDialog.java
 *
 * Created on 02.06.2009, 15:20:49
 */

package peripheral.designer;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author Berni
 */
public class StartUpDialog extends javax.swing.JDialog {

    public enum StartOption {
        NEW,
        EXISTING
    }

    private static String [] allowedExtentions = new String [] {"zip"};

    JFileChooser fileChooser;

    File configurationFile;

    StartOption option;

    /** Creates new form StartUpDialog */
    public StartUpDialog(java.awt.Frame parent) {
        super(parent, true);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        headerLabel = new javax.swing.JLabel();
        createNewButton = new javax.swing.JButton();
        loadExistingButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        headerLabel.setFont(new java.awt.Font("Bank Gothic", 1, 18)); // NOI18N
        headerLabel.setText("Peripheral Display Designer");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(35, 35, 35)
                .add(headerLabel)
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .add(headerLabel)
                .addContainerGap())
        );

        createNewButton.setText("Create new...");
        createNewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNewButtonActionPerformed(evt);
            }
        });

        loadExistingButton.setText("Load existing...");
        loadExistingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadExistingButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .add(layout.createSequentialGroup()
                .add(31, 31, 31)
                .add(createNewButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 79, Short.MAX_VALUE)
                .add(loadExistingButton)
                .add(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(42, 42, 42)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(createNewButton)
                    .add(loadExistingButton))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadExistingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadExistingButtonActionPerformed

        if (fileChooser == null) {
            fileChooser = new JFileChooser();
            fileChooser.setFileFilter(new ConfigFileFilter());
            fileChooser.setDialogTitle("Select an configuration file to load");
        }

        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            this.configurationFile = fileChooser.getSelectedFile();

            option = StartOption.EXISTING;

            //close this dialog
            this.setVisible(false);
            this.dispose();
        }
    }//GEN-LAST:event_loadExistingButtonActionPerformed

    private void createNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewButtonActionPerformed
        option = StartOption.NEW;

        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_createNewButtonActionPerformed


    public StartOption showStartUpDialog() {
        this.setVisible(true);

        return option;
    }

    public File getConfigFile() {
        return this.configurationFile;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createNewButton;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton loadExistingButton;
    // End of variables declaration//GEN-END:variables

    class ConfigFileFilter extends FileFilter {

    //Accept all directories and all gif, jpg, tiff, or png files.
    public boolean accept(java.io.File f) {
        if (f.isDirectory()) {
            return true;
        }

        for (String support : allowedExtentions) {
            if (f.getName().toLowerCase().endsWith(support)) {
                return true;
            }
        }

        return false;
    }

    //The description of this filter
    public String getDescription() {
        return "Configurationfiles";
    }
}
}
