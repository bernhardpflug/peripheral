/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * VizConfigFrame.java
 *
 * Created on 08.06.2009, 17:07:08
 */

package peripheral.viz;

import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import processing.core.PApplet;

/**
 *
 * @author Berni
 */
public class VizStartupFrame extends javax.swing.JFrame {

    JFileChooser configChooser;
    java.io.File configFile;

    /** Creates new form VizConfigFrame */
    public VizStartupFrame() {
        initComponents();

        configChooser = new JFileChooser();
        configChooser.setFileFilter(new ZipFilter());
        //this.logoLabel.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir") + "/res/pdc.png"));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        fileLabel = new javax.swing.JLabel();
        selectFileButton = new javax.swing.JButton();
        runButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 36));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("VISUALIZATION");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(120, 10, 290, 43);

        fileLabel.setText("<no file>");

        selectFileButton.setText("Choose...");
        selectFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFileButtonActionPerformed(evt);
            }
        });

        runButton.setText("Run");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(fileLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 182, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(selectFileButton)
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(368, Short.MAX_VALUE)
                .add(runButton)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(fileLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(selectFileButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 8, Short.MAX_VALUE)
                .add(runButton)
                .addContainerGap())
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(40, 70, 460, 100);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectFileButtonActionPerformed

        if (configChooser.showOpenDialog(null) == configChooser.APPROVE_OPTION) {
            configFile = configChooser.getSelectedFile();
            fileLabel.setText(configFile.getName());
        }
    }//GEN-LAST:event_selectFileButtonActionPerformed

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed

        if (configFile != null) {

            this.setVisible(false);
            this.dispose();
            PApplet.main(new String[]{"--present", "peripheral.viz.VisApplet", configFile.getAbsolutePath()});
        }
    }//GEN-LAST:event_runButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VizStartupFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel fileLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton runButton;
    private javax.swing.JButton selectFileButton;
    // End of variables declaration//GEN-END:variables

    private class ZipFilter extends FileFilter {

    //Accept all directories and all gif, jpg, tiff, or png files.
    public boolean accept(java.io.File f) {
        if (f.isDirectory()) {
            return true;
        }

        if (f.getName().toLowerCase().endsWith(".zip")) {
            return true;
        }

        return false;
    }

    //The description of this filter
    public String getDescription() {
        return "ConfigurationFiles";
    }
}
}
